environment:
  global:
    PLATFORMTOOLSET: "v140"

  matrix:
    - BUILD_TYPE: "Python35"
      COMPILER: MSVC15
      PLATFORM: "x64"
    - BUILD_TYPE: "Python36"
      COMPILER: MSVC15
      PLATFORM: "x64"
    - BUILD_TYPE: "Debug"
      COMPILER: MSVC15
      PLATFORM: "x64"

install:
- if [%BUILD_TYPE%]==[Debug] set PATH=C:\Miniconda36-x64\Scripts;%PATH%
- if [%BUILD_TYPE%]==[Python35] set PATH=C:\Miniconda35-x64\Scripts;%PATH%
- if [%BUILD_TYPE%]==[Python36] set PATH=C:\Miniconda36-x64\Scripts;%PATH%
- conda config --add channels conda-forge --force
- if [%BUILD_TYPE%]==[Debug] conda create -y --name pagmo python=3.6 cmake boost eigen nlopt
- if [%BUILD_TYPE%]==[Python35] conda create -y --name pagmo python=3.5 cmake boost eigen nlopt
- if [%BUILD_TYPE%]==[Python36] conda create -y --name pagmo python=3.6 cmake boost eigen nlopt
- activate pagmo
- if [%BUILD_TYPE%]==[Python35] conda install -y numpy dill ipyparallel
- if [%BUILD_TYPE%]==[Python36] conda install -y numpy dill ipyparallel

build_script:
- mkdir build
- cd build
- if [%BUILD_TYPE%]==[Debug] cmake -G "Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Debug -DPAGMO_BUILD_TESTS=YES -DPAGMO_BUILD_TUTORIALS=YES -DPAGMO_WITH_EIGEN3=yes -DPAGMO_WITH_NLOPT=yes ..
- if [%BUILD_TYPE%]==[Debug] cmake --build . --config Debug --target install
- if [%BUILD_TYPE%]==[Python35] cmake -G "Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Release -DPAGMO_WITH_EIGEN3=yes -DPAGMO_WITH_NLOPT=yes -DPAGMO_BUILD_PYGMO=yes ..
- if [%BUILD_TYPE%]==[Python35] cmake --build . --config Release --target install
- if [%BUILD_TYPE%]==[Python36] cmake -G "Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=Release -DPAGMO_WITH_EIGEN3=yes -DPAGMO_WITH_NLOPT=yes -DPAGMO_BUILD_PYGMO=yes ..
- if [%BUILD_TYPE%]==[Python36] cmake --build . --config Release --target install

test_script:
- if [%BUILD_TYPE%]==[Debug] ctest --output-on-failure
- if [%BUILD_TYPE%]==[Python35] cd c:\
- if [%BUILD_TYPE%]==[Python35] start /b ipcluster start
- if [%BUILD_TYPE%]==[Python35] timeout 20
- if [%BUILD_TYPE%]==[Python35] python -c "import pygmo; pygmo.test.run_test_suite()"
- if [%BUILD_TYPE%]==[Python36] cd c:\
- if [%BUILD_TYPE%]==[Python36] start /b ipcluster start
- if [%BUILD_TYPE%]==[Python36] timeout 20
- if [%BUILD_TYPE%]==[Python36] python -c "import pygmo; pygmo.test.run_test_suite()"

notifications:
  - provider: Webhook
    url: https://webhooks.gitter.im/e/1a3742192bd3f7e6d8e2

# Enable this to be able to login to the build worker. You can use the
# `remmina` program in Ubuntu, use the login information that the line below
# prints into the log.
# on_finish:
# - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
